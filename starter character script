# script for HP update 
local character = script.Parent
local player = game.Players:GetPlayerFromCharacter(character)
if not player then return end

local head = character:WaitForChild("Head")
local humanoid = character:WaitForChild("Humanoid")

local healthBarGui = head:WaitForChild("HealthBar")
local healthBarBackground = healthBarGui:WaitForChild("HealthBarBackground")
local healthBarFill = healthBarBackground:WaitForChild("HealthBarFill")
local healthText = healthBarBackground:WaitForChild("HealthText")

local function updateHealth()
	local healthPercent = math.max(0, humanoid.Health / humanoid.MaxHealth)

	healthBarFill.Size = UDim2.new(healthPercent, 0, 1, 0)
	healthText.Text = math.floor(healthPercent * 100) .. "%"

	if healthPercent > 0.5 then
		healthBarFill.BackgroundColor3 = Color3.new(0, 1, 0)
	elseif healthPercent > 0.2 then
		healthBarFill.BackgroundColor3 = Color3.new(1, 1, 0)
	else
		healthBarFill.BackgroundColor3 = Color3.new(1, 0, 0)
	end
end

humanoid.HealthChanged:Connect(updateHealth)
updateHealth()

# script for dashing
local UIS = game:GetService("UserInputService")
local dashBE = script:WaitForChild("Dash")
local plr = game.Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local anim = script.DashW
local cooldown = false

UIS.InputBegan:Connect(function(input, gameProcessed)

	if not gameProcessed then

		if input.KeyCode == Enum.KeyCode.Q then

			local dashDirection = "Front"
			anim = script.DashW

			if UIS:IsKeyDown(Enum.KeyCode.A) then

				dashDirection = "Left"

			elseif UIS:IsKeyDown(Enum.KeyCode.S) then

				dashDirection = "Back"
				anim = script.DashS
 
			elseif UIS:IsKeyDown(Enum.KeyCode.D) then

				dashDirection = "Right"

			end
			
			if cooldown == true then return end
				
				cooldown = true
				game:GetService("ContentProvider"):PreloadAsync({anim})
				humanoid:LoadAnimation(anim):Play()
				dashBE:Invoke(dashDirection)
				task.wait(1)
				cooldown = false

		end
	end
end)

# client-side combat script 
local UIS = game:GetService("UserInputService")
local plr = game.Players.LocalPlayer
local character = plr.Character or plr.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)

-- Animations
local M1Anim = Instance.new("Animation")
M1Anim.AnimationId = "rbxassetid://106518698084600" -- M1
local M2Anim = Instance.new("Animation")
M2Anim.AnimationId = "rbxassetid://135522403331772" -- M2
local M3Anim = Instance.new("Animation")
M3Anim.AnimationId = "rbxassetid://137266555644311" -- M3 finisher

-- Load
local M1 = animator:LoadAnimation(M1Anim)
local M2 = animator:LoadAnimation(M2Anim)
local M3 = animator:LoadAnimation(M3Anim)

-- Sounds
local Swing = script:WaitForChild("Swing") -- Sound inside script

-- State
local combo = 1
local cooldown = false
local postComboCooldown = false
local lastAttack = tick()

-- Reset combo if too slow
local function resetCombo()
	if tick() - lastAttack > 1.2 and not postComboCooldown then
		combo = 1
	end
end



UIS.InputBegan:Connect(function(input, isTyping)
	if isTyping then return end
	if character:FindFirstChild("Stunned") then return end
	if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
	if cooldown or postComboCooldown then return end

	cooldown = true
	lastAttack = tick()
	Swing:Play()
	game.ReplicatedStorage.MainEvent:FireServer()

	if combo == 1 then
		M1:Play()
		combo += 1
	elseif combo == 2 then
		M2:Play()
		combo += 1
	elseif combo == 3 then
		M3:Play()
		combo = 1 -- reset combo
		postComboCooldown = true -- lock inputs
		task.delay(1.5, function()
			postComboCooldown = false
		end)
	end

	-- Delay between hits
	task.delay(0.4, function()
		cooldown = false
	end)
end)

-- Resets combo if idle too long
game:GetService("RunService").Heartbeat:Connect(resetCombo)

#
